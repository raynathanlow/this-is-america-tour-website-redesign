{"version":3,"sources":["Heading.js","Tickets.js","Info.js","Overview.js","Show.js","Shows.js","App.js","index.js"],"names":["Heading","replaceWhitespace","text","character","replace","toLowerCase","city","this","props","react_default","a","createElement","className","day","title","venue","target","rel","href","specialGuest","Component","Tickets","seller","url","Info","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","_this2","eventId","fetch","then","response","json","result","setState","_embedded","attractions","name","_this$state","message","src_Heading","src_Tickets","style","backgroundImage","src","alt","Overview","originalDate","Show","handleKeyPress","event","key","document","activeElement","match","toggleInfo","showInfo","showing","tabbable","src_Info","src_Overview","onClick","tabIndex","onKeyPress","order","Shows","shows","show","events","forEach","element","dates","status","code","date","Date","start","dateTime","id","getDate","venues","push","sort","b","indexOf","map","src_Show","h2","querySelector","h2Pos","yPosition","offsetTop","scrollTop","clientTop","offsetParent","getPosition","body","onscroll","window","pageYOffset","classList","add","remove","addEventListener","App","src_Shows","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.374ca951.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Heading extends Component {\r\n  render() {\r\n    let city = this.props.city;\r\n    if (this.props.city === \"Inglewood\") {\r\n      city = \"Los Angeles (Inglewood)\";\r\n    }\r\n    if (this.props.city === \"Glendale\") {\r\n      city = \"Phoenix (Glendale)\"\r\n    }\r\n    return (\r\n      <div className=\"heading\">\r\n        <div className=\"dayCity\">\r\n          <div className=\"date\">December {this.props.day}</div>\r\n          <div className=\"city\">{city}</div>\r\n        </div>\r\n\r\n        <div className=\"venue\"><a title={\"Find out how to get to \" + this.props.venue + \" on Google Maps\"}target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://www.google.com/maps/search/?api=1&query=\" + this.replaceWhitespace(this.props.venue, \"+\") + \"+\" + this.replaceWhitespace(this.props.city, \"+\")}>{this.props.venue}</a></div>\r\n        <div className=\"specialGuest\">Special Guest: {this.props.specialGuest}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // replace whitespace with dashes and make all characters lowercase\r\n  replaceWhitespace = (text, character) => {\r\n    return text.replace(/\\s+/g, character).toLowerCase();\r\n  };\r\n}\r\n\r\nexport default Heading;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Tickets extends Component {\r\n  render() {\r\n    let city;\r\n    let seller;\r\n    if (this.props.city === \"Inglewood\") {\r\n      city = \"Los Angeles (Inglewood)\";\r\n    }\r\n    if (this.props.city === \"Glendale\") {\r\n      city = \"Phoenix (Glendale)\"\r\n    } else {\r\n      city = this.props.city;\r\n    }\r\n    if (this.props.city === \"Denver\") {\r\n      seller = \"Altitude Tickets\";\r\n    } else {\r\n      seller = \"Ticketmaster\"\r\n    }\r\n    return (\r\n      <div className=\"tickets\">\r\n        <a title={\"Go to \" + seller + \" to get tickets for \" + city + \" show on December \" + this.props.day}href={this.props.url}>GET TICKETS</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tickets;\r\n","import React, { Component } from \"react\";\r\nimport Heading from \"./Heading\";\r\nimport Tickets from \"./Tickets\";\r\n\r\nclass Info extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      url: \"\",\r\n      specialGuest: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let url =\r\n      \"https://app.ticketmaster.com/discovery/v2/events/\" +\r\n      this.props.eventId +\r\n      \".json?apikey=M61pKiqIJiXcCbjLBGLP5jkrGNxtnjsl\";\r\n\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(\r\n        result => {\r\n          let url;\r\n          if (this.props.city === \"Denver\") {\r\n            url = \"https://www.altitudetickets.com/events/detail/childish-gambino\";\r\n          } else {\r\n            url = result.url;\r\n          }\r\n          this.setState({\r\n            isLoaded: true,\r\n            url: url,\r\n            specialGuest: result._embedded.attractions[1].name\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, url, specialGuest } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      // show a picture of donald\r\n      return (\r\n        <div className=\"loading animate-flicker\">\r\n          {/* <div className=\"text\">Loading</div> */}\r\n          <img src=\"images/loading.jpg\" alt=\"Childish Gambino, with his back to the camera, facing a set of lasers\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"info\">\r\n          <Heading\r\n            day={this.props.day}\r\n            city={this.props.city}\r\n            venue={this.props.venue}\r\n            specialGuest={specialGuest}\r\n          />\r\n          <Tickets url={url} city={this.props.city} day={this.props.day} />\r\n          <div\r\n            className=\"infoBg\"\r\n            style={{ backgroundImage: `url(images/` + this.replaceWhitespace(this.props.venue, \"-\") + `.jpg)` }}\r\n            title={\"Front view of \" + this.props.venue + \" venue\"}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  // replace whitespace with dashes and make all characters lowercase\r\n  replaceWhitespace = (text, character) => {\r\n    return text.replace(/\\s+/g, character).toLowerCase();\r\n  };\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Overview extends Component {\r\n  render() {\r\n    let city = this.props.city;\r\n    if (this.props.city === \"Inglewood\") {\r\n      city = \"Los Angeles (Inglewood)\";\r\n    }\r\n    if (this.props.city === \"Glendale\") {\r\n      city = \"Phoenix (Glendale)\"\r\n    }\r\n    return (\r\n      <div className=\"overview\">\r\n        <img\r\n          className={\r\n            \"svg \" + this.replaceWhitespace(this.props.city, \"-\") + \"-\" + this.props.day\r\n          }\r\n          src={\"images/\" + this.props.day + \".svg\"}\r\n          alt={\"Handwriting depicting \" + this.props.originalDate + \" \" + city + \" show that has since been rescheduled to December \" + this.props.day}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // replace whitespace with dashes and make all characters lowercase\r\n  replaceWhitespace = (text, character) => {\r\n    return text.replace(/\\s+/g, character).toLowerCase();\r\n  };\r\n}\r\n\r\nexport default Overview;\r\n","import React, { Component } from \"react\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Info from \"./Info\";\r\nimport Overview from \"./Overview\";\r\n\r\n// var shows = document.querySelectorAll(\".show\");\r\n\r\nclass Show extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showInfo: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let isShow = this.state.showInfo;\r\n    let showing;\r\n    // let lessMore;\r\n    let tabbable; // controls when the show div is tabbable\r\n\r\n    if (isShow) {\r\n      showing = (\r\n        <Info\r\n          day={this.props.day}\r\n          city={this.props.city}\r\n          venue={this.props.venue}\r\n          eventId={this.props.eventId}\r\n        />\r\n      );\r\n      // lessMore = \"Less info\";\r\n      tabbable = -1; // not tabbable when info about show is showing\r\n    }\r\n    else {\r\n      showing = <Overview day={this.props.day} city={this.props.city} originalDate={this.props.originalDate} />;\r\n      // lessMore = \"More info\";\r\n      tabbable = 0; // tabbable because the info is not yet showing\r\n    }\r\n\r\n    return (\r\n      <div className=\"show\" onClick={this.toggleInfo} tabIndex={tabbable} onKeyPress={this.handleKeyPress}>\r\n        <div className=\"more-info\">\r\n          <div>Rescheduled</div>\r\n          {/* <FontAwesomeIcon className=\"info-icon\" icon={faInfoCircle} /> */}\r\n          {/* <div className=\"lessMore\">{lessMore}</div> */}\r\n        </div>\r\n        {showing}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      if (document.activeElement.className.match('show')) {\r\n        this.toggleInfo();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleInfo = () => {\r\n    this.setState({\r\n      showInfo: true\r\n    });\r\n  };\r\n}\r\n\r\nexport default Show;\r\n","import React, { Component } from \"react\";\r\nimport Show from \"./Show\";\r\n\r\nconst attractionId = \"K8vZ917uog7\"; // Childish Gambino\r\nconst order = [\r\n  16, // Los Angeles\r\n  11, // Oakland\r\n  7, // Vancouver\r\n  12, // San Jose\r\n  17, // Los Angeles\r\n  15, // Phoenix\r\n  4, // Denver\r\n  2 // Nashville\r\n];\r\n\r\nclass Shows extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      shows: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url =\r\n      \"https://app.ticketmaster.com/discovery/v2/events.json?attractionId=\" +\r\n      attractionId +\r\n      \"&countryCode=CA&countryCode=US&apikey=M61pKiqIJiXcCbjLBGLP5jkrGNxtnjsl\";\r\n\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(\r\n        result => {\r\n          let shows = [];\r\n          let show = {};\r\n\r\n          result._embedded.events.forEach(element => {\r\n            if (element.dates.status.code === \"rescheduled\") {\r\n              let date = new Date(element.dates.start.dateTime);\r\n              // console.log(element._embedded.attractions[1].name);\r\n              show[\"eventId\"] = element.id;\r\n              show[\"day\"] = date.getDate();\r\n              show[\"city\"] = element._embedded.venues[\"0\"].city.name;\r\n              show[\"venue\"] = element._embedded.venues[\"0\"].name;\r\n              show[\"specialGuest\"] = element._embedded.attractions[1].name;\r\n\r\n              let originalDate;\r\n              switch (date.getDate()) {\r\n                case 16:\r\n                  originalDate = \"September 26\";\r\n                  break;\r\n                case 11:\r\n                  originalDate = \"September 27\";\r\n                  break;\r\n                case 7:\r\n                  originalDate = \"September 30\";\r\n                  break;\r\n                case 12:\r\n                  originalDate = \"October 2\";\r\n                  break;\r\n                case 17:\r\n                  originalDate = \"October 3\";\r\n                  break;\r\n                case 15:\r\n                  originalDate = \"October 5\";\r\n                  break;\r\n                case 4:\r\n                  originalDate = \"October 9\";\r\n                  break;\r\n                case 2:\r\n                  originalDate = \"October 12\";\r\n                  break;\r\n                default:\r\n                  originalDate = \"\";\r\n              }\r\n\r\n              show[\"originalDate\"] = originalDate;\r\n\r\n              shows.push(show);\r\n              show = {};\r\n            }\r\n          });\r\n\r\n          // sort events based on original dates\r\n          shows = shows.sort(function(a, b) {\r\n            return (\r\n              order.indexOf(a.day) > order.indexOf(b.day) ||\r\n              -(order.indexOf(a.day) < order.indexOf(b.day))\r\n            );\r\n            //for the sake of recent versions of Google Chrome use:\r\n            //return a.key.charCodeAt(0) > b.key.charCodeAt(0); or return a.key.charCodeAt(0) - b.key.charCodeAt(0);\r\n          });\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            shows: shows\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, shows } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div className=\"loading-shows\">Loading shows...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"shows\">\r\n          {shows.map(show => (\r\n            <Show\r\n              key={show.day}\r\n              day={show.day}\r\n              city={show.city}\r\n              venue={show.venue}\r\n              eventId={show.eventId}\r\n              originalDate={show.originalDate}\r\n            />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Shows;\r\n","import React, { Component } from \"react\";\r\nimport Shows from \"./Shows\";\r\n\r\nvar h2 = document.querySelector(\"h2\");\r\nvar h2Pos = getPosition(h2) + 6;\r\n\r\ndocument.body.onscroll = function() {\r\n  if (window.pageYOffset >= h2Pos) {\r\n    h2.classList.add(\"fixed\");\r\n  } else {\r\n    h2.classList.remove(\"fixed\");\r\n  }\r\n};\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n  if (window.pageYOffset >= h2Pos) {\r\n    h2.classList.add(\"fixed\");\r\n  } else {\r\n    h2.classList.remove(\"fixed\");\r\n  }\r\n});\r\n\r\nfunction getPosition(element) {\r\n  var yPosition = 0;\r\n\r\n  while (element) {\r\n    yPosition += element.offsetTop - element.scrollTop + element.clientTop;\r\n    element = element.offsetParent;\r\n  }\r\n\r\n  return yPosition;\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <Shows />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}